#Task 2 
# List Pods Running On Cluster Within The Pod And Save it Under /usr/share/nginx/html/index.html

#Creating Folder
mkdir assignment2 ; cd assignment2

### Creating Startup Script For Docker Container ###
nano getpods.sh

### Open File ###

python3 listpods.py > pods.html
cp pods.html /usr/share/nginx/html/pods.html
nginx -g "daemon off;"

### Saving File ###

### Python Script To List Pods ###
nano listpods.py

### Open File ###

from kubernetes import client, config

config.load_incluster_config()
v1 = client.CoreV1Api()
print("Listing pods with their IPs:")
ret = v1.list_namespaced_pod(namespace='default', watch=False)
for i in ret.items:
 print("%s\t%s\t%s" %
  (i.status.pod_ip, i.metadata.namespace, i.metadata.name))

### Save File ###

nano Dockerfile

### Creating Docker Image ###

FROM nginx
RUN apt-get update
RUN apt install python3 python3-pip -y
RUN pip3 install kubernetes
COPY getpods.sh /opt/getpods.sh
COPY listpods.py /opt/listpods.py
WORKDIR /opt
RUN chmod +x getpods.sh
ENTRYPOINT /opt/getpods.sh

### Saving File ###

# Building Image 
docker build -t harssssshh/mynginx

#Pushing image

docker login
docker push harssssshh/mynginx


#Creating RoleBinding Resource To View Running Pods Using default user & default namespace
nano rolebind.yaml

### Open File ###

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: view-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

### Save File ###

# Creating Role Binding Service From yaml

kubectl create -f role.yaml

#Creating Pod From Dockerfile

nano pod.yaml

### Open File ###

apiVersion: v1
kind: Pod
metadata:
 name: nginxpod
 labels:
  app: nginx
spec:
 serviceAccountName: default
 containers:
  - name: nginxcont
    image: harssssshh/mynginx
    ports:
     - containerPort: 80

### Save File ###

#Creating pod from yaml

kubectl create -f pod.yaml

#Exposing Pod

kubectl expose pod nginxpod --type NodePort --port 80

#Getting Nodeport
kubectl get svc

# Visit URL Locally
172.17.0.2:30154/index.html
#Refer index.png
172.17.0.2:30154/pods.html
#Refer pods.png
